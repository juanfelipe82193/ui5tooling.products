'use strict';
const
    xsenv = require('@sap/xsenv'),
    axios = require('axios'),
    URLSearchParams = require('url').URLSearchParams;

class Utils {

    /**
     * Get technical user token from uaa, based on technical user flow:
     */
    static async getTechnicalUserToken() {
        try {
            const
                portalService = xsenv.cfServiceCredentials({tag: 'portal-service'}),
                uaaBrokerCreds = portalService.uaa,
                uaaURL = uaaBrokerCreds.url,
                clientId = uaaBrokerCreds.clientid,
                clientSecret = uaaBrokerCreds.clientsecret,
                tokenURL = `${uaaURL}/oauth/token`,
                additionalAttributes = {};

            let params = new URLSearchParams();
            params.append('client_id', clientId);
            params.append('client_secret', clientSecret);
            params.append('grant_type', 'client_credentials');
            params.append('response_type', 'token');
            params.append('authorities', JSON.stringify({'az_attr': additionalAttributes}));

            let options = {
                headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                data: params.toString(),
                url: tokenURL,
                method: 'post'
            };

            let getTokenResponse = await axios(options);
            if (getTokenResponse.data && getTokenResponse.data.access_token) {
                return getTokenResponse.data.access_token;
            } else {
                console.error('getTechnicalUserToken- failed to get token');
                throw new Error('getTechnicalUserToken- failed to get token from UAA')
            }
        } catch (err) {
            console.error('getTechnicalUserToken- failed to get token from UAA', err);
            throw Error(err);
        }
    }
}

module.exports = Utils;

